- Class: meta
  Course: FlippedTradingClassroom
  Lesson: 01-Buy-TSMC
  Author: Wush Wu and GU Chen
  Type: Standard
  Organization: 
  Version: 101.3.1.7

- Class: text
  Output: |
    R軟體的強大在於有許多開發者依據其專業領域去撰寫各式各樣的套件(packages)，
    以利R語言的使用者使用。
- Class: text
  Output: |
    在使用套件之前，我們必須先安裝套件，請同學輸入：`install.packages("quantmod")`
  CorrectAnswer: check_then_install("quantmod", "0.4-5")
  AnswerTests: test_package_version("quantmod", "0.4-5")
  Hint: install.packages("quantmod")
- Class: text
  Output: |
    安裝好的套件還無法直接使用，必須要將其載入R軟體中。
- Class: text
  Output: |
    接著，請同學載入剛剛安裝好的套件，請輸入`library(quantmod)`
  CorrectAnswer: library(quantmod)
  AnswerTests: test_search_path("quantmod")
  Hint: library(quantmod)
- Class: text
  Output: |
    quantmod套件可以讓我們從線上資料庫讀取台灣股票的日資料。這個功能，得透過
    學習`getSymbols`這個函數才能使用。
- Class: cmd_question
  Output: |
    請同學輸入：`?getSymbols`打開這個函數的說明頁面。
- Class: text
  Output: |
    一般來說，R 的功能都是透過函數來實現。舉例來說，下載資料是`getSymbols`，看資料可以用`head`與`tail`。
    新手同學們可以把函數想像成讓R 做動作。
- Class: text
  Output: |
    函數的行為，例如`getSymbols`下載的是台積電的股價，還是聯電的股價，則透過參數來控制。
- Class: text
  Output: |
    在Help中，R在`Description`中會顯示函數的功能。
- Class: text
  Output: |
    在Help中，R在`Usage`中會顯示getSymbols的函數定義：`getSymbols(Symbols = NULL, 
    env = parent.frame(),...`。
- Class: text
  Output: |
    在Help中，R在`Arguments`中會顯示參數代表的型態與意義，例如`Symbols`必須是一個字串向量，並且代表要載入的符號。
- Class: text
  Output: |
    這些文件主要由開發者撰寫，所以不一定很清楚。有時候我們可以透過`example(getSymbols)`來看範例，間接學習參數的功能。
    或是細讀`Details`的章節。一種實務常見的作法是嘗試改變參數後，觀察函數不同的行為，猜測函數的功能。最後則是直接看
    函數的原始碼，閱讀函數的細部動作，而了解參數的功能。
- Class: cmd_question
  Output: |
    請同學輸入：`getSymbols`，R會印出函數的原始碼。當同學對R 越來越熟悉之後，一些很細節的問題，常常可以透過閱讀原始碼
    來解決，甚至是參考原始碼後寫出符合自己需求的函數。
- Class: text
  Output: |
    我們回到`Usage`。函數的定義中，會顯示「參數名稱」，或是「參數名稱」與「預設參數」。
- Class: text
  Output: |
    舉例來說，`getSymbols`的括弧中，第一個參數名稱與預設參數，是：`Symbols = NULL`。
- Class: text
  Output: |
    這表示函數的第一個參數的名稱是`Symbol`，預設值是`NULL`。（有興趣了解的同學可以輸入`?NULL`查看關於NULL的說明，
    但是因為之後的範例暫時不會用到，所以我們先不解釋）
- Class: text
  Output: |
    如果我們在R console中輸入：`getSymbols('google')`，表示參數`Symbol`的值是`'google'`。因為Symbol是第一個參數。
- Class: text
  Output: |
    這裡也提醒同學，注意單引號`'`或雙引號`"`。被框起來的敘述，如：`'google'`代表'google'這個字串。而如果沒有單引號或雙引號，
    則代表名稱為google的變數，所以漏掉引號的同學可能會看到紅字：`Error: object 'google' not found`。
- Class: text
  Output: |
    如果我們在R console中輸入：`getSymbols(src = 'google')`，表示參數`src`的值是`'google'`，而參數`Symbol`的值是`NULL`。
    因為我們告訴R `'google'`對應到`src`，而沒有提供關於`Symbol`的資訊。R 就會讓`Symbol`等於預設值，也就是NULL。
- Class: text
  Output: |
    當我們在輸入函數時，R 會先看名稱。也就是如果我們有給`getSymbols(src = 'google')`，R就知道`'google'`是對應到名稱為`src`的參數。
- Class: text
  Output: |
    接著R會看位置，所以R在收到`getSymbols('google')`後，發現我們沒有指定`'google'`對應的參數名稱，就會對應到第一個參數。
- Class: mult_question
  Output: |
    請同學參考ˋUsage`的內容作答。請問當使用者輸入：`getSymbols(globalenv(), Symbols = "^TWII")`後，`globalenv()`會對應到那一個參數？
  AnswerChoices: Symbols|env|reload.Symbols|src
  CorrectAnswer: "env"
  AnswerTests: omnitest(correctVal = "env")
  Hint: |
    使用者有給參數名稱時，R會優先採用，再看位置。但是參數的名稱不可以相同(第一個位置的參數是Symbols，重複了)。如果有撞到，
    R會跳過對應的位置(從第一個位置，改成第二個位置)。
- Class: cmd_question
  Output: |
    `getSymbols`函數可以從網路下載日資料。請同學輸入：`getSymbols("2330.tw")`從Yahoo下載股票代號為2330的股價歷史資料。
  CorrectAnswer: getSymbols("2330.tw")
- Class: text
  Output: |
    同學會看到螢幕上顯示一個字串：`"2330.TW"`。這代表下載成功，並且R把資料匯入到變數`2330.TW`中。
- Class: text
  Output: |
    但是R的變數名稱，如果是數字開頭，或是某些特出符號開頭時，直接輸入變數名稱會出錯。舉例來說，如果有變數名稱是`1`，
    那我們輸入1後，R 仍然會認為這是數字1，而不是名稱為`1`的變數。剛好，`2330.TW`撞到R的這個規則。
- Class: cmd_question
  Output: |
    所以我們需要透過`get`函數來讀取這類名稱特殊的變數。請同學輸入`get("2330.TW")`
  CorrectAnswer: get("2330.TW")
- Class: cmd_question
  Output: |
    每次讀取變數都要輸入`get("2330.TW")`的話，有點麻煩，所以我們把這個變數指定到另一個名稱：`STK`。
    請同學輸入：`STK = get("2330.TW")`
  CorrectAnswer: STK = get("2330.TW")
- Class: text
  Output: |
    我們在讀取資料後，會使用`head()`函數與`tail()`函數來觀察一下資料的長相。
- Class: text
  Output: |
    `head()`函數為幫助我們觀看資料的前n筆資料，n預設為6筆。
    這裡我們利用剛剛下載的STK做為練習，請輸入`head(STK)`觀察STK前6筆資料。
  CorrectAnswer: head(STK)
- Class: cmd_question
  Output: |
    若輸入`head(STK, 10)`則會顯示出STK前10筆資料。請同學試試看。
- Class: cmd_question
  Output: |
    `tail()`函數為幫助我們觀看資料的最後n筆資料，n預設為6筆。
    請同學輸入`tail(STK)`觀察STK最後6筆資料。
  CorrectAnswer: tail(STK)
- Class: text
  Output: |
    為什麼不觀察前幾筆資料就好了？
- Class: text
  Output: |
    依照我們在實務上的經驗，前幾筆資料的長相不見得與後幾筆的資料長相一樣，
    故`head()`與`tail()`是在我們初步觀察資料時，非常實用的兩個函數。
- Class: text
  Output: |
    `tail(STK)`的輸出，是一個表格，每一列代表一天的資料，最左邊顯示的就是日期。而名稱有Open的欄位代表開盤價，有High的代表
    最高點，有Low的代表最低點，有Close的代表收盤價，有Volume的代表成交量，而Adjusted代表還原權值。
- Class: text
  Output: |
    R 的亮點之一，就是優秀的視覺化。quantmod套件提供我們一個函數`chartSeries`
    讓我們能很快的觀察股價波動。
- Class: cmd_question
  Output: |
    請同學輸入：`?chartSeries`看看說明文件。
- Class: mult_question
  Output: |
    請問同學，如果我們輸入：`chartSeries(STK)`，`STK`會對應到那一個參數？
  AnswerChoices: x|type|subset
  CorrectAnswer: "x"
  AnswerTests: omnitest(correctVal = "x")
  Hint: 請參考`Usage`
- Class: cmd_question
  Output: |
    請問同學，根據作者的說明，參數`x`代表？
  AnswerChoices: an OHLC object - see details|style of chart to draw|xts style date subsetting argument
  CorrectAnswer: "an OHLC object - see details"
  AnswerTests: omnitest(correctVal = "an OHLC object - see details")
  Hint: 請參考`Arguments`
- Class: cmd_question
  Output: |
    有時候，閱讀細節不如直接跑程式：請同學直接輸入`chartSeries(STK)`
- Class: text
  Output: |
    `chartSeries`的功能就是畫出股價的變化。
- Class: text
  Output: |
    在R中，資料可以有許多不同的呈現樣貌，例如：numeric、character、matrix、data.frame等，
    而`class()`函數可以幫助我們了解資料的型態。
- Class: text
  Output: |
    我們來看看STK的資料型態為何？請同學輸入`class(STK)`
  CorrectAnswer: class(STK)
  AnswerTests: omnitest('class(STK)')
  Hint: class(STK)
- Class: text
  Output: |
    結果顯示STK的資料型態為c("xts", "zoo")。`"zoo"`是貢獻者撰寫的套件，在R 中處理時間序列資料的物件。
    而`"xts"`是由`"xts"`套件所提供的改良`"zoo"`的物件。
    限於篇幅，所以麻煩有興趣的同學再自行上網自學這些物件的細節。
    例如：<https://cran.r-project.org/web/packages/xts/vignettes/xts.pdf>。
- Class: text
  Output: |
    股價資料是一種時間序列。時間序列常常會將資料轉換成不同的時間頻率。舉例來說，將日資料轉換成周資料。
- Class: cmd_question
  Output: |
    xts套件提供`to.weekly`函數可以讓我們快速做轉換。請同學輸入：`to.weekly(STK)`。
- Class: text
  Output: |
    同學可以注意資料的日期間隔，是不是由日資料轉換成周資料了呢？
- Class: text
  Output: |
    資料型態間可以透過函數進行轉換，例如：as.numeric、as.character、as.matrix等。
- Class: text
  Output: |
    接著，我們將STK資料型態由data.frame轉換為matrix(矩陣)。
    請同學輸入STK <- as.matrix(STK)
  CorrectAnswer: as.matrix(iris)
  AnswerTests: omnitest('as.matrix(iris)')
  Hint: as.matrix(iris)
- Class: text
  Output: |
    我們可以利用`rownames()`與`colnames()`擷取出資料集的列名稱或行名稱。
- Class: text
  Output: |
    首先，我們利用`rownames()`擷取出資料集的列名稱，並且將其存入row變數中。
    請同學輸入`row <- rownames(iris)`
  CorrectAnswer: row <- rownames(iris)
  AnswerTests: omnitest('row <- rownames(iris)')
  Hint: row <- rownames(iris)
- Class: text
  Output: |
    我們可以利用`length()`函數來計算R物件的長度，請同學輸入`length(row)`
  CorrectAnswer: length(row)
  AnswerTests: omnitest('length(row)')
  Hint: length(row)
- Class: text
  Output: |
    假設我們要對向量中的物件進行命名，`setNames()`函數，可以幫助我們做到這點。
- Class: text
  Output: |
    舉例來說，我們今天要將97、98、99三個成績對應到該同學的名字。
    請同學輸入`setNames(97:99, c("Amber", "Jenny", "Shelly"))`
  CorrectAnswer: setNames(97:99, c("Amber", "Jenny", "Shelly"))
  AnswerTests: omnitest('setNames(97:99, c("Amber", "Jenny", "Shelly"))')
  Hint: setNames(97:99, c("Amber", "Jenny", "Shelly"))
- Class: text
  Output: |
    這個指令等同於以下指令，請同學自行參考練習。
    `score <- 97:99`
    `names(score) <- c("Amber", "Jenny", "Shelly")`
    `score`
- Class: text
  Output: |
    這裡要跟各位同學介紹兩個函數，一個是加總函數`sum()`，一個為`cumsum()`。
- Class: text
  Output: |
    我們直接輸入例子來觀察結果，請同學輸入`sum(1:3)`
  CorrectAnswer: sum(1:3)
  AnswerTests: omnitest('sum(1:3)')
  Hint: sum(1:3)
- Class: text
  Output: |
    接著請同學輸入`cumsum(1:3)`
  CorrectAnswer: cumsum(1:3)
  AnswerTests: omnitest('cumsum(1:3)')
  Hint: cumsum(1:3)
- Class: text
  Output: |
    `sum(1:3)`為對1、2、3進行加總，意即1+2+3。
- Class: text
  Output: |
    `cumsum(1:3)`為一累加函數，從第一個物件開始進行累加的動作，
    意即1、1+2、1+2+3。
- Class: text
  Output: |
    最後我們要介紹一個可以幫助我們黏貼字串的`paste()`函數。
- Class: text
  Output: |
    請同學輸入`?paste`。問號的意義等同於help()，
    當我們不曉得函數的使用方式時可以這樣與R求救。
- Class: text
  Output: |
    <這個範例能不能具體的拿最後的程式碼做說明呢?>
    請同學輸入`paste(c("Amber", "Jenny", "Shelly"), 97:99, sep = ":")`
  CorrectAnswer: paste(c("Amber", "Jenny", "Shelly"), 97:99, sep = ":")
  AnswerTests: omnitest('paste(c("Amber", "Jenny", "Shelly"), 97:99, sep = ":")')
  Hint: paste(c("Amber", "Jenny", "Shelly"), 97:99, sep = ":")
- Class: text
  Output: |
    上述指令為我們將三位同學的名稱以及其對應的考試成績利用":"進行黏貼。
- Class: text
  Output: |
    基本函數的介紹就到這裡為止，接下來的課程還會出現許多新函數，我們會在課程中詳細介紹。
- Class: text
  Output: |
    <講解profit>
- Class: text
  Output: |
    <講解winRate>
- Class: text
  Output: |
    <講解Profit Factor>
- Class: script
  Output: |
    <Script檔案的開啟>
  Script: 0_1BuyTSMC.R
  AnswerTests: hw_test()

  